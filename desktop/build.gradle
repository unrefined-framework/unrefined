dependencies {
    implementation project(':core')
    api project(':core')
    implementation 'com.github.jnr:jffi:1.3.13'
    api 'com.github.jnr:jffi:1.3.13'
    implementation 'com.github.jnr:jffi:1.3.13:native'

    implementation 'com.tianscar.javasound:javasound-resloader:0.1.3'
    api 'com.tianscar.javasound:javasound-resloader:0.1.3'

    implementation 'com.tianscar.javasound:javasound-flac:1.4.1'
    implementation 'com.tianscar.javasound:javasound-mp3:1.9.8'
    implementation 'com.tianscar.javasound:javasound-aac:0.9.8'

    implementation 'com.github.stephengold:j-ogg-vorbis:1.0.4'
}

/*
jar {
    manifest {
        from project(':core').jar.manifest

        attributes 'Specification-Title': 'Unrefined For Java Standard Edition'
    }
}
 */

task testJar(type: Jar) {
    dependsOn ':core:jar'

    //manifest { from jar.manifest }

    archiveClassifier = 'test'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from sourceSets.test.output
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }

    with jar
}
